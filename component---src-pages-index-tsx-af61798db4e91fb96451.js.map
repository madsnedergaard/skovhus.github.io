{"version":3,"sources":["webpack:///./src/content/discography/index.ts","webpack:///./src/components/Discography.tsx","webpack:///./src/content/talks.ts","webpack:///./src/pages/index.tsx"],"names":["useDiscographyData","nameToImage","allFile","edges","map","edge","node","filter","childImageSharp","reduce","acc","name","fluid","Error","getImage","fileName","linkTo","title","subTitle","image","SPACING","rhythm","Container","Link","Image","GatsbyImage","InfoContainer","Title","Discography","discography","idx","href","target","rel","key","alt","TALKS","description","Heading","NegativeHeadingSpacingHack","HeadingSpacingHack","LinkEntity","linkElement","startsWith","ExternalLink","noUnderline","style","boxShadow","to","marginBottom","lineHeight","dangerouslySetInnerHTML","__html","Index","location","posts","allMarkdownRemark","Layout","showHeaderIntro","marginTop","id","frontmatter","fields","slug","date","timeToRead","talk"],"mappings":"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","file":"component---src-pages-index-tsx-af61798db4e91fb96451.js","sourcesContent":["import { useStaticQuery, graphql } from 'gatsby'\nimport { FluidObject } from 'gatsby-image'\nimport { DiscographyImageQuery } from '../../__generated__/gatsby-types'\n\ntype Image = FluidObject\n\ntype DiscographyElement = {\n  linkTo: string\n  title: string\n  subTitle: string\n  image: Image\n}\n\nexport const useDiscographyData = (): DiscographyElement[] => {\n  const {\n    allFile: { edges },\n  } = useStaticQuery<DiscographyImageQuery>(\n    graphql`\n      query DiscographyImage {\n        allFile(filter: { sourceInstanceName: { eq: \"discography\" } }) {\n          edges {\n            node {\n              name\n              childImageSharp {\n                fluid(maxWidth: 350) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  type ImageMap = { [name: string]: Image }\n\n  const nameToImage: ImageMap = edges\n    .map(edge => edge.node)\n    .filter(node => node.childImageSharp)\n    .reduce((acc: ImageMap, { childImageSharp, name }) => {\n      if (!childImageSharp || !name || !childImageSharp.fluid) {\n        throw new Error(`childImageSharp or name was missing`)\n      }\n\n      acc[name] = childImageSharp.fluid\n      return acc\n    }, {})\n\n  const getImage = (fileName: string): Image => {\n    if (!(fileName in nameToImage)) {\n      throw new Error(`Image ${fileName} not found`)\n    }\n    return nameToImage[fileName]\n  }\n\n  return [\n    {\n      linkTo: 'https://open.spotify.com/album/5m2T9VPMmzXIR3zXSkiVDz',\n      title: 'Freddy and the Phantoms: \"First Blood Universe\" (2019)',\n      subTitle: 'Engineering, co-production',\n      image: getImage('freddy-first-blood-universe'),\n    },\n    {\n      linkTo: 'https://open.spotify.com/album/4ggXw0iv9LuhuQVYfxII9H',\n      title: 'Go for Gold: \"Canned Goods Never Say Die\" (2018)',\n      subTitle: 'Bass, engineering, mix, production',\n      image: getImage('go-for-gold-canned-goods'),\n    },\n\n    {\n      linkTo: 'https://open.spotify.com/album/7dRSHYf2qgKGXyUaa2uTI1',\n      title:\n        'Go for Gold: \"Kunst â€“ How to Be Something for Others, While Being Completely Selfâ€‹-â€‹Absorbed\" (2014)',\n      subTitle: 'Bass, engineering',\n      image: getImage('go-for-gold-kunst'),\n    },\n    {\n      linkTo: 'https://open.spotify.com/album/6Kkgu8GsxGKgBIwQ6XMrpm',\n      title: 'Go for Gold: EP (2011)',\n      subTitle: 'Bass, engineering, mix, production',\n      image: getImage('go-for-gold-ep'),\n    },\n    {\n      linkTo: 'https://open.spotify.com/album/7Iyek8NrjlyGUJ5fTw0BOA',\n      title: 'Freddy and the Phantoms: \"Leaving the Landscape\" (2010)',\n      subTitle: 'Engineering, mix, production',\n      image: getImage('freddy-leaving-the-landscape'),\n    },\n    {\n      linkTo:\n        'https://soundcloud.com/cleomalone/sets/fear-comes-with-imagination-ep-2008',\n      title: 'Cleo Malone: \"Fear Comes With Imagination\" (2008)',\n      subTitle: 'Bass, engineering',\n      image: getImage('cleo-malone-fear'),\n    },\n  ]\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport GatsbyImage from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\nimport { useDiscographyData } from '../content/discography/index'\n\nconst SPACING = rhythm(2 / 4)\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  grid-gap: ${SPACING};\n  align-items: stretch;\n`\n\nconst Link = styled.a`\n  color: inherit;\n  display: flex;\n  flex-direction: column;\n\n  box-shadow: 0.8px 0.9px 3px rgba(0, 0, 0, 0.3);\n  transition: box-shadow 0.5s ease-in-out;\n\n  &:hover {\n    box-shadow: 1px 8px 20px rgba(0, 0, 0, 0.3);\n  }\n`\n\nconst Image = styled(GatsbyImage)`\n  max-width: 100%;\n  margin-bottom: 0;\n  border-bottom: 1px solid #eee;\n`\n\nconst InfoContainer = styled.div`\n  padding: 0 ${SPACING} ${SPACING} ${SPACING};\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  font-size: 70%;\n`\n\nconst Title = styled.div`\n  font-weight: bold;\n  margin-top: ${SPACING};\n  margin-bottom: ${SPACING};\n`\n\nexport default function Discography() {\n  const discography = useDiscographyData()\n\n  return (\n    <Container>\n      {discography.map(({ image, linkTo, subTitle, title }, idx) => (\n        <Link href={linkTo} target=\"_blank\" rel=\"nofollow noopener noreferrer\" key={idx}>\n          <Image fluid={image} alt={title} />\n          <InfoContainer>\n            <Title>{title}</Title>\n            <div>{subTitle}</div>\n          </InfoContainer>\n        </Link>\n      ))}\n    </Container>\n  )\n}\n","type Talk = {\n  description: string\n  linkTo: string\n  title: string\n  subTitle: string\n}\n\n// TODO: images\n// TODO: slides\nexport const TALKS: Talk[] = [\n  {\n    description:\n      'Summing up 2+ years of learnings from my journey into the React Native jungle. How to get started? What to be aware of? Lessons learned and battles fought.',\n    linkTo: 'https://www.youtube.com/watch?v=S12ypU2VFfU',\n    title: 'A journey into React Native development ðŸŒ´',\n    subTitle: 'Copenhagen React Meetup at Leo Innovation Lab (May 2019)',\n  },\n  {\n    description:\n      'My motivation for making contributing to open source software my new yearâ€™s resolution in 2017. Hopefully, this will motivate people to do the same thing.',\n    linkTo: 'https://speakerdeck.com/skovhus/making-open-source-my-new-years-resolution',\n    title: 'Making open source my new yearâ€™s resolution',\n    subTitle: 'Tech festival (September 2017)',\n  },\n  {\n    description:\n      'A brief motivation for the importance of static type safety in larger codebases. Comparison of different static type-checkers options for front-end code: TypeScript, Flow, Reason, Elm. Trade-offs and recommendations.',\n    linkTo: 'https://speakerdeck.com/skovhus/type-safety-plus-front-end-code-equals',\n    title: 'type safety + front-end code =',\n    subTitle: 'Copenhagen.js Meetup at issuu.com (June 2017)',\n  },\n  {\n    description:\n      'Short and practical introduction to codemods. They are \"scripted search and replace\" and super useful for automation and refactoring.',\n    linkTo: 'https://www.youtube.com/watch?v=eMI0UBav8Q4',\n    title: 'An introduction to automated refactoring with JavaScript codemods ðŸ‘¾',\n    subTitle: 'Copenhagen.js Meetup (December 2016)',\n  },\n  {\n    description:\n      'As frameworks come and go and best practices see constant change, it is increasingly challenging to make confident decisions about client-side code. We present our experiences in search for the right abstractions and architecture optimized for change. We also elaborate on how selecting the React ecosystem for our stack improved our workflow and product quality, as well as examine problems we faced.',\n    linkTo: 'https://vimeo.com/168543655',\n    title: 'Rethinking front-end development at issuu.com',\n    subTitle: 'At the Frontend Conference (May 2016)',\n  },\n  {\n    description:\n      'After using React since early 2015 it was time to evaluate the first year. Where did we come from? What improvements to our codebase did React introduce? Based on learnings from issuu.com.',\n    linkTo:\n      'https://speakerdeck.com/skovhus/evaluating-a-year-working-with-react-and-redux',\n    title: 'Evaluating a year working with React & Redux',\n    subTitle: 'React and Redux Copenhagen Meetup (April 2016)',\n  },\n]\n","import React from 'react'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport Discography from '../components/Discography'\nimport ExternalLink from '../components/ExternalLink'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { rhythm } from '../utils/typography'\nimport { TALKS } from '../content/talks'\nimport { IndexQuery } from '../__generated__/gatsby-types'\n\nconst Heading = styled.h1`\n  font-size: 2rem;\n  margin-top: 5rem;\n`\n\nconst NegativeHeadingSpacingHack = styled.div`\n  margin-top: -1rem;\n`\n\nconst HeadingSpacingHack = styled.div`\n  margin-top: 3rem;\n`\n\nconst LinkEntity = ({\n  description,\n  linkTo,\n  subTitle,\n  title,\n}: {\n  subTitle: string\n  description: string\n  linkTo: string\n  title: string\n}) => {\n  const linkElement = linkTo.startsWith('http') ? (\n    <ExternalLink linkTo={linkTo} noUnderline>\n      {title}\n    </ExternalLink>\n  ) : (\n    <Link style={{ boxShadow: `none` }} to={linkTo}>\n      {title}\n    </Link>\n  )\n\n  return (\n    <div>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n          lineHeight: 1.4,\n        }}\n      >\n        {linkElement}\n      </h3>\n      <small>{subTitle}</small>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: description,\n        }}\n      />\n    </div>\n  )\n}\n\ntype Props = {\n  location: Location\n}\n\nexport default function Index({ location }: Props) {\n  const data = useStaticQuery<IndexQuery>(\n    graphql`\n      query Index {\n        allMarkdownRemark(\n          filter: { fields: { slug: { regex: \"/blog/\" } } }\n          sort: { fields: [frontmatter___date], order: DESC }\n        ) {\n          edges {\n            node {\n              fields {\n                slug\n              }\n              timeToRead\n              frontmatter {\n                date(formatString: \"MMMM DD, YYYY\")\n                title\n                description\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} showHeaderIntro>\n      <SEO location={location} />\n      <p style={{ marginTop: '2rem' }}>\n        I have been messing around with computers and music for as long as I remember.\n        Building meaningful products together with talented people is my passion. I love\n        mentoring, sharing knowledge, and excel in working full-stack with web\n        technologies. MSc in Computer Science from the Technical University of Denmark.\n      </p>\n      <p>\n        This is my portfolio where I gather random bits and pieces. I hope you find\n        something useful in my attempt to fight digital sharecropping.\n      </p>\n\n      <NegativeHeadingSpacingHack />\n      <Heading id=\"posts\">I occasionally blog</Heading>\n      <NegativeHeadingSpacingHack />\n      {posts.map(({ node }: any) => {\n        if (!node.frontmatter || !node.fields) {\n          throw new Error('missing frontmatter or fields on post')\n        }\n\n        const { description, title } = node.frontmatter\n        const { slug } = node.fields\n\n        if (!description || !title) {\n          throw new Error('missing description or title on post')\n        }\n\n        if (!slug) {\n          throw new Error('missing slug on post')\n        }\n\n        return (\n          <LinkEntity\n            description={description}\n            key={slug}\n            linkTo={slug}\n            subTitle={`${node.frontmatter.date} â€¢ ${node.timeToRead} minute read`}\n            title={title}\n          />\n        )\n      })}\n\n      <Heading id=\"talks\">I enjoy giving talks</Heading>\n      <NegativeHeadingSpacingHack />\n      {TALKS.map(talk => (\n        <LinkEntity {...talk} key={talk.title} />\n      ))}\n\n      <Heading id=\"oss\">I contribute to open source</Heading>\n      <p>\n        I&apos;m a strong advocate for giving back to the open source software community,\n        that I depend on to do my job and projects.\n      </p>\n      <p>Highlights:</p>\n      <ul>\n        <li>\n          <ExternalLink linkTo=\"https://github.com/skovhus/jest-codemods\">\n            skovhus/jest-codemods\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink linkTo=\"https://github.com/skovhus/css-modules-flow-types\">\n            skovhus/css-modules-flow-types\n          </ExternalLink>\n        </li>\n        <li>\n          <ExternalLink linkTo=\"https://hatch.sh/\">hatch.sh</ExternalLink>\n        </li>\n        <li>\n          <ExternalLink linkTo=\"https://github.com/mads-hartmann/bash-language-server\">\n            bash-language-server\n          </ExternalLink>\n          {` `}+ bash extensions for code editors\n        </li>\n        <li>\n          <ExternalLink linkTo=\"https://github.com/facebook/jest\">jest</ExternalLink>\n        </li>\n      </ul>\n\n      <Heading id=\"music\">I play &amp; record music</Heading>\n      <HeadingSpacingHack />\n      <Discography />\n    </Layout>\n  )\n}\n"],"sourceRoot":""}