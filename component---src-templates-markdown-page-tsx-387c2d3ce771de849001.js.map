{"version":3,"sources":["webpack:///./src/templates/MarkdownPage.tsx"],"names":["MarkdownPageTemplate","data","location","post","markdownRemark","html","frontmatter","title","Error","showHeaderIntro","pageTitle","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,2IAae,SAASA,EAAT,GAAyD,IAAzBC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAC7CC,EAAOF,EAAKG,eAElB,KAAKD,GAASA,EAAKE,MAASF,EAAKG,aAAgBH,EAAKG,YAAYC,OAChE,MAAM,IAAIC,MAAM,kCAJoD,IAM9DD,EAAUJ,EAAKG,YAAfC,MAER,OACE,YAAC,IAAD,CAAQL,SAAUA,EAAUO,iBAAe,GACzC,YAAC,IAAD,CAAKP,SAAUA,EAAUQ,UAAWH,IACpC,mBAAKI,wBAAyB,CAAEC,OAAQT,EAAKE,SAK5C,IAAMQ,EAAY","file":"component---src-templates-markdown-page-tsx-387c2d3ce771de849001.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\n\nimport { MarkdownPageBySlugQuery } from '../__generated__/gatsby-types'\n\ntype Props = {\n  data: MarkdownPageBySlugQuery\n  location: Location\n}\n\nexport default function MarkdownPageTemplate({ data, location }: Props) {\n  const post = data.markdownRemark\n\n  if (!post || !post.html || !post.frontmatter || !post.frontmatter.title) {\n    throw new Error('post or frontmatter is missing')\n  }\n  const { title } = post.frontmatter\n\n  return (\n    <Layout location={location} showHeaderIntro>\n      <SEO location={location} pageTitle={title} />\n      <div dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query MarkdownPageBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      frontmatter {\n        title\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n"],"sourceRoot":""}