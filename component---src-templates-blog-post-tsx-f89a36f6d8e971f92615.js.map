{"version":3,"sources":["webpack:///./src/components/BlogBio.tsx","webpack:///./src/templates/BlogPost.tsx"],"names":["Container","rhythm","BlogBio","ProfileImage","href","Subtitle","scale","fontSize","lineHeight","BlogNavigation","HorizontalLine","BlogPostTemplate","data","location","pageContext","post","markdownRemark","previous","next","slug","siteUrl","site","siteMetadata","featuredImageSrc","frontmatter","featuredImage","childImageSharp","fixed","src","undefined","discussUrl","encodeURIComponent","Layout","description","excerpt","image","pageTitle","title","date","timeToRead","dangerouslySetInnerHTML","__html","html","ExternalLink","linkTo","to","fields","rel","pageQuery"],"mappings":"wLAMMA,EAAY,mBAAH,mBAAG,CAAH,8BAEIC,YAAO,KAFX,KAKA,SAASC,IACtB,OACE,YAACF,EAAD,KACE,YAACG,EAAA,EAAD,MACA,6HAIE,iBAAGC,KAAI,uCAAP,2B,oICPR,IAAMC,EAAW,iBAAH,oBAAG,CAAH,aACCC,aAAM,IAAQC,SADf,gBAEGD,aAAM,IAAQE,WAFjB,gCAIKP,YAAO,GAJZ,eAKEA,aAAQ,GALV,KAQRQ,EAAiB,kBAAH,oBAAG,CAAH,gHAQdC,EAAiB,kBAAH,oBAAG,CAAH,iBACDT,YAAO,GADN,eAEJA,YAAO,GAFH,KAmCL,SAASU,EAAT,GAAkE,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,YACnDC,EAAOH,EAAKI,eACVC,EAAyBH,EAAzBG,SAAUC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAChBC,EAAYR,EAAKS,KAAKC,aAAtBF,QACFG,EAAmBR,EAAKS,YAAYC,cAAjB,GAClBL,EAAUL,EAAKS,YAAYC,cAAcC,gBAAgBC,MAAMC,SAClEC,EAEEC,EAAa,uCAAuCC,mBAAmB,4BAC/CZ,GAG9B,OACE,YAACa,EAAA,EAAD,CAAQnB,SAAUA,GAChB,YAAC,IAAD,CACEoB,YAAalB,EAAKS,YAAYS,aAAelB,EAAKmB,QAClDC,MAAOZ,EACPV,SAAUA,EACVuB,UAAWrB,EAAKS,YAAYa,QAG9B,2BACE,sBAAKtB,EAAKS,YAAYa,OACtB,YAAChC,EAAD,KACGU,EAAKS,YAAYc,KADpB,MAC6BvB,EAAKwB,WADlC,gBAGA,mBAAKC,wBAAyB,CAAEC,OAAQ1B,EAAK2B,QAC7C,YAACC,EAAA,EAAD,CAAcC,OAAQd,GAAtB,iCACA,YAACpB,EAAD,OAGF,YAACR,EAAD,MAEA,YAACO,EAAD,KACE,sBACGQ,GACC,YAAC,OAAD,CAAM4B,GAAI5B,EAAS6B,OAAO3B,KAAM4B,IAAI,QAApC,KACK9B,EAASO,YAAYa,QAI9B,sBACGnB,GACC,YAAC,OAAD,CAAM2B,GAAI3B,EAAK4B,OAAO3B,KAAM4B,IAAI,QAC7B7B,EAAKM,YAAYa,MADpB,SAUL,IAAMW,EAAY","file":"component---src-templates-blog-post-tsx-f89a36f6d8e971f92615.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { rhythm } from '../utils/typography'\nimport ProfileImage from './ProfileImage'\n\nconst Container = styled.div`\n  display: flex;\n  margin-bottom: ${rhythm(2.5)};\n`\n\nexport default function BlogBio() {\n  return (\n    <Container>\n      <ProfileImage />\n      <p>\n        Kenneth Skovhus is a full-stack engineer and music recording enthusiast from\n        Copenhagen, Denmark.\n        {` `}\n        <a href={`https://twitter.com/kenneth_skovhus`}>Follow him on Twitter</a>\n      </p>\n    </Container>\n  )\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport BlogBio from '../components/BlogBio'\nimport ExternalLink from '../components/ExternalLink'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { rhythm, scale } from '../utils/typography'\n\nimport './BlogPost.css'\n\nconst Subtitle = styled.p`\n  font-size: ${scale(-1 / 5).fontSize};\n  line-height: ${scale(-1 / 5).lineHeight};\n  display: block;\n  margin-bottom: ${rhythm(1)};\n  margin-top: ${rhythm(-1)};\n`\n\nconst BlogNavigation = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n`\n\nconst HorizontalLine = styled.hr`\n  margin-bottom: ${rhythm(1)};\n  margin-top: ${rhythm(1)};\n`\n\n// FIXME: these should really be auto generated by Gatsby tooling\ntype Props = {\n  data: {\n    markdownRemark: {\n      excerpt: string\n      html: string\n      timeToRead: string // FIXME: use\n      frontmatter: {\n        description: string\n        date: string\n        title: string\n        featuredImage?: {\n          childImageSharp: {\n            fixed: {\n              src: string\n            }\n          }\n        }\n      }\n    }\n    site: {\n      siteMetadata: {\n        siteUrl: string\n      }\n    }\n  }\n  location: Location\n  pageContext: any\n}\n\nexport default function BlogPostTemplate({ data, location, pageContext }: Props) {\n  const post = data.markdownRemark\n  const { previous, next, slug } = pageContext\n  const { siteUrl } = data.site.siteMetadata\n  const featuredImageSrc = post.frontmatter.featuredImage\n    ? `${siteUrl}${post.frontmatter.featuredImage.childImageSharp.fixed.src}`\n    : undefined\n\n  const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n    `https://skovhus.github.io${slug}`\n  )}`\n\n  return (\n    <Layout location={location}>\n      <SEO\n        description={post.frontmatter.description || post.excerpt}\n        image={featuredImageSrc}\n        location={location}\n        pageTitle={post.frontmatter.title}\n      />\n\n      <article>\n        <h1>{post.frontmatter.title}</h1>\n        <Subtitle>\n          {post.frontmatter.date} • {post.timeToRead} minute read\n        </Subtitle>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <ExternalLink linkTo={discussUrl}>Discuss this post on Twitter.</ExternalLink>\n        <HorizontalLine />\n      </article>\n\n      <BlogBio />\n\n      <BlogNavigation>\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </BlogNavigation>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 200)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            fixed(width: 500, height: 500) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n"],"sourceRoot":""}