{"componentChunkName":"component---src-pages-index-tsx","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/flow-to-typescript-migration/"},"timeToRead":6,"frontmatter":{"date":"February 09, 2020","title":"Migrating from Flow to TypeScript using flow-to-ts","description":"Over the last couple of years, I have been migrating several codebases from Flow to TypeScript with minimal effort. In this post, I will describe my motivation and the approach I would recommend."}}},{"node":{"fields":{"slug":"/software-engineering-principles/"},"timeToRead":5,"frontmatter":{"date":"January 13, 2020","title":"Software Engineering Principles","description":"A list of the high-level technical principles and beliefs that I operate by when building software. Lots of links and references."}}},{"node":{"fields":{"slug":"/converting-an-app-to-react-native/"},"timeToRead":9,"frontmatter":{"date":"April 13, 2018","title":"Converting an app to React Native — How to get started","description":"Tips and tricks on tooling, navigation, and libraries when getting into React Native development. Especially relevant for native mobile developers approaching React Native."}}},{"node":{"fields":{"slug":"/type-safe-css-modules-with-flow/"},"timeToRead":3,"frontmatter":{"date":"June 21, 2017","title":"Type safe CSS Modules with Flow","description":"CSS Modules + Flow = type safety and editor autocompletion. Introducing a few open source projects to help you with type safety and editor autocompletion."}}},{"node":{"fields":{"slug":"/react-prop-types-to-flow-codemod/"},"timeToRead":3,"frontmatter":{"date":"April 11, 2017","title":"React PropTypes to Flow codemod","description":"I’m presenting how to automatically convert your existing codebase using React PropTypes to use more powerful Flow annotations."}}},{"node":{"fields":{"slug":"/abandoning-the-mothership/"},"timeToRead":6,"frontmatter":{"date":"December 16, 2015","title":"Abandoning the mothership","description":"It was time to pour into our front-end code the same poison we gave our back-end systems, splitting it all apart into maintainable chunks. Our vision was to make each feature team at issuu.com own, build and deploy its front-end code autonomously—and to make things that ought to be trivial actually trivial!"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}