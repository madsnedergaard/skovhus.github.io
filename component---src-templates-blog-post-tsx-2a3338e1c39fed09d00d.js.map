{"version":3,"sources":["webpack:///./src/components/BlogBio.tsx","webpack:///./src/templates/BlogPost.tsx"],"names":["BlogBio","style","display","marginBottom","rhythm","ProfileImage","href","BlogPostTemplate","data","location","pageContext","post","markdownRemark","previous","next","slug","siteUrl","site","siteMetadata","featuredImageSrc","frontmatter","featuredImage","childImageSharp","fixed","src","undefined","discussUrl","encodeURIComponent","Layout","description","excerpt","image","pageTitle","title","scale","marginTop","date","timeToRead","dangerouslySetInnerHTML","__html","html","ExternalLink","linkTo","flexWrap","justifyContent","listStyle","padding","to","fields","rel","pageQuery"],"mappings":"oLAKe,SAASA,IACtB,OACE,mBACEC,MAAO,CACLC,QAAS,OACTC,aAAcC,YAAO,OAGvB,YAACC,EAAA,EAAD,MACA,6HAIE,iBAAGC,KAAI,uCAAP,2B,kDCuBO,SAASC,EAAT,GAAkE,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,YACnDC,EAAOH,EAAKI,eACVC,EAAyBH,EAAzBG,SAAUC,EAAeJ,EAAfI,KAAMC,EAASL,EAATK,KAChBC,EAAYR,EAAKS,KAAKC,aAAtBF,QACFG,EAAmBR,EAAKS,YAAYC,cAAjB,GAClBL,EAAUL,EAAKS,YAAYC,cAAcC,gBAAgBC,MAAMC,SAClEC,EAEEC,EAAa,uCAAuCC,mBAAmB,4BAC/CZ,GAG9B,OACE,YAACa,EAAA,EAAD,CAAQnB,SAAUA,GAChB,YAAC,IAAD,CACEoB,YAAalB,EAAKS,YAAYS,aAAelB,EAAKmB,QAClDC,MAAOZ,EACPV,SAAUA,EACVuB,UAAWrB,EAAKS,YAAYa,QAG9B,2BACE,sBAAKtB,EAAKS,YAAYa,OACtB,iBACEhC,MAAK,iBACAiC,aAAM,IADN,CAEHhC,QAAS,QACTC,aAAcC,YAAO,GACrB+B,UAAW/B,aAAQ,MAGpBO,EAAKS,YAAYgB,KARpB,MAQ6BzB,EAAK0B,WARlC,gBAUA,mBAAKC,wBAAyB,CAAEC,OAAQ5B,EAAK6B,QAC7C,YAACC,EAAA,EAAD,CAAcC,OAAQhB,GAAtB,iCACA,kBACEzB,MAAO,CACLE,aAAcC,YAAO,GACrB+B,UAAW/B,YAAO,OAKxB,YAACJ,EAAD,MAEA,kBACEC,MAAO,CACLC,QAAS,OACTyC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,sBACGjC,GACC,YAAC,OAAD,CAAMkC,GAAIlC,EAASmC,OAAOjC,KAAMkC,IAAI,QAApC,KACKpC,EAASO,YAAYa,QAI9B,sBACGnB,GACC,YAAC,OAAD,CAAMiC,GAAIjC,EAAKkC,OAAOjC,KAAMkC,IAAI,QAC7BnC,EAAKM,YAAYa,MADpB,S,kFAUL,IAAMiB,EAAY","file":"component---src-templates-blog-post-tsx-2a3338e1c39fed09d00d.js","sourcesContent":["import React from 'react'\n\nimport { rhythm } from '../utils/typography'\nimport ProfileImage from './ProfileImage'\n\nexport default function BlogBio() {\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <ProfileImage />\n      <p>\n        Kenneth Skovhus is a full-stack engineer and music recording enthusiast from\n        Copenhagen, Denmark.\n        {` `}\n        <a href={`https://twitter.com/kenneth_skovhus`}>Follow him on Twitter</a>\n      </p>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport BlogBio from '../components/BlogBio'\nimport ExternalLink from '../components/ExternalLink'\nimport Layout from '../components/Layout'\nimport SEO from '../components/Seo'\nimport { rhythm, scale } from '../utils/typography'\n\nimport './BlogPost.css'\n\n// FIXME: these should really be auto generated by Gatsby tooling\ntype Props = {\n  data: {\n    markdownRemark: {\n      excerpt: string\n      html: string\n      timeToRead: string // FIXME: use\n      frontmatter: {\n        description: string\n        date: string\n        title: string\n        featuredImage?: {\n          childImageSharp: {\n            fixed: {\n              src: string\n            }\n          }\n        }\n      }\n    }\n    site: {\n      siteMetadata: {\n        siteUrl: string\n      }\n    }\n  }\n  location: Location\n  pageContext: any\n}\n\nexport default function BlogPostTemplate({ data, location, pageContext }: Props) {\n  const post = data.markdownRemark\n  const { previous, next, slug } = pageContext\n  const { siteUrl } = data.site.siteMetadata\n  const featuredImageSrc = post.frontmatter.featuredImage\n    ? `${siteUrl}${post.frontmatter.featuredImage.childImageSharp.fixed.src}`\n    : undefined\n\n  const discussUrl = `https://mobile.twitter.com/search?q=${encodeURIComponent(\n    `https://skovhus.github.io${slug}`\n  )}`\n\n  return (\n    <Layout location={location}>\n      <SEO\n        description={post.frontmatter.description || post.excerpt}\n        image={featuredImageSrc}\n        location={location}\n        pageTitle={post.frontmatter.title}\n      />\n\n      <article>\n        <h1>{post.frontmatter.title}</h1>\n        <p\n          style={{\n            ...scale(-1 / 5),\n            display: `block`,\n            marginBottom: rhythm(1),\n            marginTop: rhythm(-1),\n          }}\n        >\n          {post.frontmatter.date} • {post.timeToRead} minute read\n        </p>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n        <ExternalLink linkTo={discussUrl}>Discuss this post on Twitter.</ExternalLink>\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n            marginTop: rhythm(1),\n          }}\n        />\n      </article>\n\n      <BlogBio />\n\n      <ul\n        style={{\n          display: `flex`,\n          flexWrap: `wrap`,\n          justifyContent: `space-between`,\n          listStyle: `none`,\n          padding: 0,\n        }}\n      >\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ← {previous.frontmatter.title}\n            </Link>\n          )}\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {next.frontmatter.title} →\n            </Link>\n          )}\n        </li>\n      </ul>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 200)\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        featuredImage {\n          childImageSharp {\n            fixed(width: 500, height: 500) {\n              ...GatsbyImageSharpFixed\n            }\n          }\n        }\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }\n`\n"],"sourceRoot":""}